name: Supabase Pull Drift (cloud → repo)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 6 * * *"   # optional daily run

jobs:
  pull-remote-changes:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - uses: supabase/setup-cli@v1

      # Ensure config has project_id (safe to keep if you already committed it)
      - name: Ensure supabase/config.toml has project_id
        run: |
          mkdir -p supabase
          if ! grep -q '^project_id' supabase/config.toml 2>/dev/null; then
            echo 'project_id = "${{ secrets.SUPABASE_PROJECT_REF }}"' > supabase/config.toml
          fi
          echo "----- config.toml -----"
          cat supabase/config.toml

      - name: Generate drift migration from live project
        id: diff
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          set -e
          ts=$(date -u +"%Y%m%d%H%M%S")
          out="supabase/migrations/${ts}_remote_drift.sql"

          echo "Diffing live project → $out"
          # Target public schema explicitly; add more --schema lines if you use others
          supabase db diff \
            --project-ref ${{ secrets.SUPABASE_PROJECT_REF }} \
            --schema public \
            -f "$out" || true

          echo "----- ls supabase/migrations -----"
          ls -la supabase/migrations || true

          if [ -s "$out" ]; then
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
            echo "file=$out" >> "$GITHUB_OUTPUT"
            echo "Generated non-empty migration: $out"
            head -n 50 "$out" || true
          else
            # Remove empty file so the PR step won't open a no-op PR
            rm -f "$out"
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
            echo "No drift detected (or diff produced empty file)."
          fi

      - name: Open/Update PR with drift migration
        if: steps.diff.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          title: "chore(db): sync remote schema drift"
          commit-message: "chore(db): add migration generated from remote schema drift"
          branch: chore/db-remote-drift
          base: main
          add-paths: |
            supabase/migrations/**
          body: |
            Generated by `supabase db diff --schema public` from the live project.
            Review & merge to make Git the source of truth again.
